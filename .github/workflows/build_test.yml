name: Build and Test

on:
    - pull_request

jobs:
    install_cms:
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: cms
        env:
            NODE_ENV: PRODUCTION
            SKIP_DECR: 'TRUE'
            FAST: 'TRUE'

        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  persist-credentials: false

            - name: Get Node
              uses: actions/setup-node@v2

            - name: Install dependencies
              run: npm ci

            - name: Cache all of the above
              uses: actions/cache@v2
              id: cache-cms
              with:
                  path: ./*
                  key: ${{runner.os}}-cms

    build_cms:
        runs-on: ubuntu-latest
        needs: install_cms
        env:
            NODE_ENV: PRODUCTION
            SKIP_DECR: 'TRUE'
            FAST: 'TRUE'

        defaults:
            run:
                working-directory: cms

        steps:
            - name: restore cache
              uses: actions/cache@v2
              id: restore-cms-build
              with:
                  path: ./*
                  key: ${{runner.os}}-cms

            - name: build cms dashboard
              run: npm run ci:build

    # test_cms:
    #     runs-on: ubuntu-latest
    #     needs: install_cms

    #     defaults:
    #         run:
    #             working-directory: cms
    #     steps:
    #         - name: restore cache
    #           uses: actions/cache@v2
    #           id: restore-cms-test
    #           with:
    #               path: ./*
    #               key: ${{runner.os}}-cms-${{github.sha}}
    #         - name: create firebase-env file
    #           run: touch firebase-env.json
    #         - name: test using mocha
    #           run: npm run test

    install_dis:
        runs-on: ubuntu-latest

        env:
            NODE_ENV: PRODUCTION
            SKIP_DECR: 'TRUE'
            FAST: 'TRUE'

        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  persist-credentials: false

            - name: Get Node
              uses: actions/setup-node@v2

            - name: Install dependencies
              run: npm ci

            - name: Install cms
              run: npm ci --prefix cms

            - name: Cache all of the above
              uses: actions/cache@v2
              id: cache-dis
              with:
                  path: ./*
                  key: ${{runner.os}}-dis-${{github.sha}}

    test_dis_unit:
        runs-on: ubuntu-latest
        needs: install_dis

        steps:
            - name: restore cache
              uses: actions/cache@v2
              id: restore-dis-test-unit
              with:
                  path: ./*
                  key: ${{runner.os}}-dis-${{github.sha}}

            - name: run unit tests
              run: npm run test:unit

    test_dis_integration:
        runs-on: ubuntu-latest
        needs:
            - install_dis

        steps:
            - name: restore dis cache
              uses: actions/cache@v2
              id: restore-dis-test-integration
              with:
                  path: ./*
                  key: ${{runner.os}}-dis-${{github.sha}}

            - name: restore cms cache
              uses: actions/cache@v2
              id: restore-cms-dis-test
              with:
                  path: cms
                  key: ${{runner.os}}-cms

            - name: run integration tests
              run: npm run test:integration

    build_dis:
        runs-on: ubuntu-latest
        needs:
            - install_dis

        steps:
            - name: restore dis cache
              uses: actions/cache@v2
              id: restore-dis-test-integration
              with:
                  path: ./*
                  key: ${{runner.os}}-dis-${{github.sha}}

            - name: list everything
              run: |
                  ls -a .
                  ls cms/

            - name: Build NextJS
              run: |
                  npm run server:testing & npm run build

    test_report:
        runs-on: ubuntu-latest
        needs:
            - install_dis

        steps:
            - name: restore dis cache
              uses: actions/cache@v2
              id: restore-dis-test-report
              with:
                  path: ./*
                  key: ${{runner.os}}-dis-${{github.sha}}

            - name: test dis with report
              uses: mattallty/jest-github-action@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  test-command: 'npm run test:full'
